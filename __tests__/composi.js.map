{"version":3,"file":"composi.js.map","sources":["../node_modules/@composi/core/src/vnode.js","../node_modules/@composi/core/src/vdom.js","../node_modules/@composi/core/src/constants.js","../src/index.js","../node_modules/@composi/core/src/h.js","../node_modules/@composi/core/src/render.js"],"sourcesContent":["import {\n  EMPTY_OBJECT,\n  EMPTY_ARRAY,\n  TEXT_NODE,\n  RECYCLED_NODE\n} from './constants'\n/**\n * @typedef {Object.<string, any> | {}} Props\n * @property {Children} Props.children\n */\n/**\n * @typedef {VNode[]} Children\n */\n/**\n * @typedef {string | number | Function} Type\n * @typedef {number | string | null} Key\n * @typedef {Object.<string, any>} VNode\n * @property {Type} VNode.type\n * @property {Props} VNode.props\n * @property {Children} VNode.children\n * @property {Element} VNode.element\n * @property {Key} [VNode.key]\n * @property {number} VNode.flag\n */\n/**\n * Create a virtual node with the provided properties.\n * @param {string | Function} type\n * @param {Props} props\n * @param {Children} children\n * @param {Element} element\n * @param {string | number | null} key\n * @param {number} flag\n * @return {VNode} VNode\n */\nexport function createVNode(type, props, children, element, key, flag) {\n  return {\n    type,\n    props,\n    children,\n    element,\n    key,\n    flag\n  }\n}\n\n/**\n * Create a virtual text node.\n * @param {string} text\n * @param {Element} [element]\n * @return {VNode} VNode\n */\nexport function createTextVNode(text, element) {\n  return createVNode(text, EMPTY_OBJECT, EMPTY_ARRAY, element, null, TEXT_NODE)\n}\n\n/**\n * Create a virtual node represeting an element and its children.\n * @param {Element} element\n * @return {VNode} VNode\n */\nexport function hydrate(element) {\n  if (typeof element === 'string') element = document.querySelector(element)\n  return createVNode(\n    element.nodeName.toLowerCase(),\n    EMPTY_OBJECT,\n    EMPTY_ARRAY.map.call(element.childNodes, vnodeFromChild),\n    element,\n    null,\n    RECYCLED_NODE\n  )\n}\n\n/**\n * Cycle through the child nodes of an element and create virtual nodes of them.\n * @param {Element} element\n * @return {VNode}\n */\nfunction vnodeFromChild(element) {\n  if (element.nodeType === 3) {\n    return createTextVNode(element.nodeValue, element)\n  } else {\n    return hydrate(element)\n  }\n}\n","import { RECYCLED_NODE, TEXT_NODE, XLINK_NS, SVG_NS } from './constants'\nimport { mergeObjects } from '@composi/merge-objects'\nimport { getType } from '@composi/get-type'\n\n/**\n * Event proxy for inline events.\n * @param {Event} event\n * @return {any} any\n */\nfunction eventProxy(event) {\n  return event.currentTarget['events'][event.type](event)\n}\n\n/**\n * Get the key value of a virtual node.\n * @typedef {import('./vnode').VNode} VNode\n * @param {VNode} node\n * @return {string | number | null}\n */\nfunction getKey(node) {\n  return node == null ? null : node.key\n}\n\n/**\n * Create a map of keyed nodes.\n * @typedef {import('./vnode').Children} Children\n * @param {Children} children\n * @param {number} start\n * @param {number} end\n * @return {Object.<string, any>} Object.<string, any>\n */\nfunction createKeyMap(children, start, end) {\n  const out = {}\n  let key\n  let node\n\n  for (; start <= end; start++) {\n    if ((key = (node = children[start]).key) != null) {\n      out[key] = node\n    }\n  }\n\n  return out\n}\n\n/**\n * Update the properties and attributes of a VNode based on new data.\n * @param {Element} element\n * @param {string} prop\n * @param {any} oldValue\n * @param {any} newValue\n * @param {boolean} isSVG\n * @return {void} undefined\n */\nfunction setProp(element, prop, oldValue, newValue, isSVG) {\n  if (oldValue === newValue) return\n  if (prop === 'style' && getType(newValue) === 'Object') {\n    for (let i in mergeObjects(oldValue, newValue)) {\n      const style = newValue == null || newValue[i] == null ? '' : newValue[i]\n      if (i[0] === '-') {\n        element[prop].setProperty(i, style)\n      } else {\n        element[prop][i] = style\n      }\n    }\n  } else if (prop !== 'key') {\n    if (prop === 'className') prop = 'class'\n\n    if (prop[0] === 'o' && prop[1] === 'n') {\n      if (!element['events']) element['events'] = {}\n      prop = prop.slice(2).toLowerCase()\n      if (!oldValue) oldValue = element['events'][prop]\n      element['events'][prop] = newValue\n\n      if (newValue == null) {\n        element.removeEventListener(prop, eventProxy)\n      } else if (oldValue == null) {\n        element.addEventListener(prop, eventProxy)\n      }\n    } else {\n      const nullOrFalse =\n        newValue == null ||\n        newValue === false ||\n        newValue === 'no' ||\n        newValue === 'off'\n\n      if (\n        prop in element &&\n        prop !== 'list' &&\n        prop !== 'type' &&\n        prop !== 'draggable' &&\n        prop !== 'spellcheck' &&\n        prop !== 'translate' &&\n        !isSVG\n      ) {\n        element[prop] = newValue == null ? '' : newValue\n        if (nullOrFalse) {\n          element.removeAttribute(prop)\n        }\n      } else {\n        if (prop === 'xlink-href' || prop === 'xlinkHref') {\n          element.setAttributeNS(XLINK_NS, 'href', newValue)\n          element.setAttribute('href', newValue)\n        } else {\n          if (nullOrFalse) {\n            element.removeAttribute(prop)\n          } else {\n            element.setAttribute(prop, newValue)\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Create an element, either node or text, from a VNode.\n * @typedef {Function[]} Lifecycle\n * @param {VNode} vnode\n * @param {Lifecycle} lifecycle\n * @param {boolean} [isSVG]\n * @return {Element}\n */\nexport function createElement(vnode, lifecycle, isSVG) {\n  let element\n  if (vnode.flag === TEXT_NODE) {\n    element = document.createTextNode(/** @type {string} */(vnode.type))\n  } else {\n    if ((isSVG = isSVG || vnode.type === 'svg')) {\n      element = document.createElementNS(\n        SVG_NS,\n        /** @type {string} */(vnode.type)\n      )\n    } else {\n      element = document.createElement(/** @type {string} */(vnode.type))\n    }\n  }\n\n  const props = vnode.props\n  if (props['onmount']) {\n    lifecycle.push(function () {\n      props['onmount'](element)\n    })\n  }\n\n  for (let i = 0, length = vnode.children.length; i < length; i++) {\n    element.appendChild(createElement(vnode.children[i], lifecycle, isSVG))\n  }\n\n  for (let prop in props) {\n    setProp(/** @type {Element} */(element), prop, null, props[prop], isSVG)\n  }\n\n  return (vnode.element = /** @type {Element} */ (element))\n}\n\n/**\n * Remove children from a node.\n * @param {VNode} node\n * @return {Element}\n */\nfunction removeChildren(node) {\n  for (let i = 0, length = node.children.length; i < length; i++) {\n    removeChildren(node.children[i])\n  }\n  return node.element\n}\n\n/**\n * Remove an element from the DOM.\n * @param {Element} parent\n * @param {VNode} vnode\n * @return {void} undefined\n */\nfunction removeElement(parent, vnode) {\n  function done() {\n    if (parent && parent.nodeType) parent.removeChild(removeChildren(vnode))\n  }\n\n  const cb = vnode.props && vnode.props['onunmount']\n  if (cb != null) {\n    cb(done, vnode.element)\n  } else {\n    done()\n  }\n}\n\n/**\n * Update and element based on new prop values.\n * @typedef {import('./vnode').Props} Props\n * @param {Element} element\n * @param {Props} oldProps\n * @param {Props} newProps\n * @param {Lifecycle} lifecycle\n * @param {boolean} isSVG\n * @param {boolean} isRecycled\n * @return {void} undefined\n */\nfunction updateElement(\n  element,\n  oldProps,\n  newProps,\n  lifecycle,\n  isSVG,\n  isRecycled\n) {\n  for (let prop in mergeObjects(oldProps, newProps)) {\n    if (\n      (prop === 'value' || prop === 'checked'\n        ? element[prop]\n        : oldProps[prop]) !== newProps[prop]\n    ) {\n      setProp(element, prop, oldProps[prop], newProps[prop], isSVG)\n    }\n  }\n\n  const cb = isRecycled ? newProps['onmount'] : newProps['onupdate']\n  if (cb != null) {\n    lifecycle.push(function () {\n      cb(element, oldProps, newProps)\n    })\n  }\n}\n\n/**\n * Patch an element based on differences between its old VNode and its new one.\n * @param {Element} parent\n * @param {Element} element\n * @param {VNode} oldVNode\n * @param {VNode} newVNode\n * @param {Lifecycle} lifecycle\n * @param {boolean} [isSVG]\n * @return {VNode}\n */\nexport function patchElement(\n  parent,\n  element,\n  oldVNode,\n  newVNode,\n  lifecycle,\n  isSVG\n) {\n  // Abort if vnodes are identical.\n  if (newVNode === oldVNode) {\n  } else if (\n    oldVNode != null &&\n    oldVNode.flag === TEXT_NODE &&\n    newVNode.flag === TEXT_NODE\n  ) {\n    if (oldVNode.type !== newVNode.type) {\n      element.nodeValue = /** @type {string} */ (newVNode.type)\n    }\n  } else if (oldVNode == null || oldVNode.type !== newVNode.type) {\n    const newElement = parent.insertBefore(\n      createElement(newVNode, lifecycle, isSVG),\n      element\n    )\n\n    if (oldVNode != null) removeElement(parent, oldVNode)\n\n    element = newElement\n  } else {\n    updateElement(\n      element,\n      oldVNode.props,\n      newVNode.props,\n      lifecycle,\n      (isSVG = isSVG || newVNode.type === 'svg'),\n      oldVNode.flag === RECYCLED_NODE\n    )\n\n    let savedNode\n    let childNode\n\n    let lastKey\n    const lastChildren = oldVNode.children\n    let lastChildStart = 0\n    let lastChildEnd = lastChildren.length - 1\n\n    let nextKey\n    const nextChildren = newVNode.children\n    let nextChildStart = 0\n    let nextChildEnd = nextChildren.length - 1\n\n    while (nextChildStart <= nextChildEnd && lastChildStart <= lastChildEnd) {\n      lastKey = getKey(lastChildren[lastChildStart])\n      nextKey = getKey(nextChildren[nextChildStart])\n\n      if (lastKey == null || lastKey !== nextKey) break\n\n      patchElement(\n        element,\n        lastChildren[lastChildStart].element,\n        lastChildren[lastChildStart],\n        nextChildren[nextChildStart],\n        lifecycle,\n        isSVG\n      )\n\n      lastChildStart++\n      nextChildStart++\n    }\n\n    while (nextChildStart <= nextChildEnd && lastChildStart <= lastChildEnd) {\n      lastKey = getKey(lastChildren[lastChildEnd])\n      nextKey = getKey(nextChildren[nextChildEnd])\n\n      if (lastKey == null || lastKey !== nextKey) break\n\n      patchElement(\n        element,\n        lastChildren[lastChildEnd].element,\n        lastChildren[lastChildEnd],\n        nextChildren[nextChildEnd],\n        lifecycle,\n        isSVG\n      )\n\n      lastChildEnd--\n      nextChildEnd--\n    }\n\n    if (lastChildStart > lastChildEnd) {\n      while (nextChildStart <= nextChildEnd) {\n        element.insertBefore(\n          createElement(nextChildren[nextChildStart++], lifecycle, isSVG),\n          (childNode = lastChildren[lastChildStart]) && childNode.element\n        )\n      }\n    } else if (nextChildStart > nextChildEnd) {\n      while (lastChildStart <= lastChildEnd) {\n        removeElement(element, lastChildren[lastChildStart++])\n      }\n    } else {\n      let lastKeyed = createKeyMap(lastChildren, lastChildStart, lastChildEnd)\n      const nextKeyed = {}\n\n      while (nextChildStart <= nextChildEnd) {\n        lastKey = getKey((childNode = lastChildren[lastChildStart]))\n        nextKey = getKey(nextChildren[nextChildStart])\n\n        if (\n          nextKeyed[lastKey] ||\n          (nextKey != null &&\n            nextKey === getKey(lastChildren[lastChildStart + 1]))\n        ) {\n          if (lastKey == null) {\n            removeElement(element, childNode)\n          }\n          lastChildStart++\n          continue\n        }\n\n        if (nextKey == null || oldVNode.flag === RECYCLED_NODE) {\n          if (lastKey == null) {\n            patchElement(\n              element,\n              childNode && childNode.element,\n              childNode,\n              nextChildren[nextChildStart],\n              lifecycle,\n              isSVG\n            )\n            nextChildStart++\n          }\n          lastChildStart++\n        } else {\n          if (lastKey === nextKey) {\n            patchElement(\n              element,\n              childNode.element,\n              childNode,\n              nextChildren[nextChildStart],\n              lifecycle,\n              isSVG\n            )\n            nextKeyed[nextKey] = true\n            lastChildStart++\n          } else {\n            if ((savedNode = lastKeyed[nextKey]) != null) {\n              patchElement(\n                element,\n                element.insertBefore(\n                  savedNode.element,\n                  childNode && childNode.element\n                ),\n                savedNode,\n                nextChildren[nextChildStart],\n                lifecycle,\n                isSVG\n              )\n              nextKeyed[nextKey] = true\n            } else {\n              patchElement(\n                element,\n                childNode && childNode.element,\n                null,\n                nextChildren[nextChildStart],\n                lifecycle,\n                isSVG\n              )\n            }\n          }\n          nextChildStart++\n        }\n      }\n\n      while (lastChildStart <= lastChildEnd) {\n        if (getKey((childNode = lastChildren[lastChildStart++])) == null) {\n          removeElement(element, childNode)\n        }\n      }\n\n      for (let key in lastKeyed) {\n        if (nextKeyed[key] == null) {\n          removeElement(element, lastKeyed[key])\n        }\n      }\n    }\n  }\n\n  newVNode.element = element\n  return newVNode\n}\n\n/**\n * Class to throw error message when attempting to insert Fragement tag directly into DOM.\n * @return {string} message\n */\nexport class FragmentError {\n  constructor() {\n    this.message = 'Cannot insert Fragment tag directly into DOM.'\n    this.toString = function () {\n      return this.message\n    }\n  }\n}\n\n/**\n * Function to either mount an element the first time or patch it in place. This behavior depends on the value of the old VNode. If it is null, a new element will be created, otherwise it compares the new VNode with the old one and patches it.\n * @param {VNode} newVNode\n * @param {Element | string} container\n * @param {VNode} [oldVNode]\n * @return {VNode} VNode\n */\nexport function patch(newVNode, container, oldVNode) {\n  if (typeof container === 'string') {\n    container = document.querySelector(container)\n  }\n  const lifecycle = []\n\n  if (!oldVNode) {\n    if (Array.isArray(newVNode)) throw new FragmentError()\n    const el = createElement(newVNode, lifecycle)\n    container.appendChild(el)\n    newVNode.element = el\n  } else {\n    patchElement(container, oldVNode['element'], oldVNode, newVNode, lifecycle)\n  }\n\n  if (newVNode !== oldVNode) {\n    while (lifecycle.length > 0) lifecycle.pop()()\n  }\n\n  newVNode.element['isMounted'] = true\n  return newVNode\n}\n","/**\n * Used to determine if a vnode should be recycled.\n * @type {number}\n */\nexport const RECYCLED_NODE = 0\n\n/**\n * Used in a vnode to indicate that it is a DOM node.\n * @type {number}\n */\nexport const ELEMENT_NODE = 1\n\n/**\n * Used in a vnode to indicate that it is a text node.\n * @type {number}\n */\nexport const TEXT_NODE = 3\n\n/**\n * Namespace for SVG elements with `xlink:href` attributes.\n * @type {string}\n */\nexport const XLINK_NS = 'http://www.w3.org/1999/xlink'\n\n/**\n * Namespace for SVG elements.\n * @type {string}\n */\nexport const SVG_NS = 'http://www.w3.org/2000/svg'\n\n/**\n * An empty object. Used as placeholder for `props` in VNode.\n * @type {{}} EMPTY_OBJECT\n */\nexport const EMPTY_OBJECT = {}\n\n/**\n * An empty array. Used for access to array methods.\n * @type {any[]} EMPTY_ARRAY\n */\nexport const EMPTY_ARRAY = []\n","/**\n * Returns a group of siblings elements for inclusion in another JSX tag.\n * @typedef {import('@composi/core/src/vnode').Props} Props\n * @typedef {import('@composi/core/src/vnode').Children} Children\n * @param {Props} props\n * @return {Children} children\n */\n/**\n * A tag to enable returning sibling elements. This is useful for returning list items to render in a list or table cells to render in a table row.\n * @example\n * \n * ```\n * <Fragment>\n *   <li>A</li>\n *   <li>B</li>\n *   <li>C</li>\n * </Fragment>\n ```\n * Or functionally:\n * ```\n * Fragment(null, [\n *   h('li', {}, 'A'),\n *   h('li', {}, 'B'),\n *   h('li', {}, 'C')\n * ])\n ```\n * @param {Object} [props] When using Fragment as a function, props is the first argument. Provide either null or {} as the value for props.\n * @param {Children} [children] The siblings to return with the Fragment. This will be an array of sibling elements.\n * @return {VNode[]} An array of virtual nodes.\n */\nexport const Fragment = (props, children) => children\n","import { createVNode, createTextVNode } from './vnode'\nimport { ELEMENT_NODE } from './constants'\n\n/**\n * Creates a virtual node representing a node or text node to be created.\n * @typedef {import('./vnode').VNode} VNode\n * @param {string | Function} type\n * @param {Object.<string, any>} props\n * @return {VNode}\n */\nexport function h(type, props, ...children) {\n  let node\n  const tempBox = []\n  const childNodes = []\n  let length = children.length\n  props = props || {}\n  const key = props.key\n\n  while (length-- > 0) tempBox.push(children[length])\n\n  if (props.children != null) {\n    if (tempBox.length <= 0) {\n      tempBox.push(props.children)\n    }\n    delete props.children\n  }\n\n  while (tempBox.length > 0) {\n    if (Array.isArray((node = tempBox.pop()))) {\n      for (length = node.length; length-- > 0; ) {\n        tempBox.push(node[length])\n      }\n    } else if (node === false || node === true || node == null) {\n    } else {\n      childNodes.push(typeof node === 'object' ? node : createTextVNode(node))\n    }\n  }\n  delete props.key\n\n  if (typeof type === 'function') {\n    return type(props, (props.children = childNodes))\n  } else {\n    return createVNode(type, props, childNodes, null, key, ELEMENT_NODE)\n  }\n}\n","import { patch } from './vdom'\n\n/**\n * A function to update a functional component already mounted in the DOM. The first argument can be either a JSX tag or an h function.\n * @example\n *\n * ```\n * // Update Title tag into section:\n * const element = mount(<Title message='Hello World!'/>, 'section')\n * // Pass the captured element to the render function:\n * render(<Title message='Hello Everyone!'/>, element, 'header')\n * ```\n * @typedef {import('./vnode').VNode} VNode\n * @param {VNode} newVNode\n * @param {Element | string} container\n * @param {VNode} [oldVNode]\n * @return {VNode} VNode\n */\nexport function render(newVNode, container, oldVNode) {\n  return patch(newVNode, container, oldVNode)\n}\n"],"names":["createVNode","type","props","children","element","key","flag","createTextVNode","text","EMPTY_OBJECT","EMPTY_ARRAY","TEXT_NODE","eventProxy","event","currentTarget","getKey","node","createKeyMap","start","end","out","setProp","prop","oldValue","newValue","isSVG","getType","i","mergeObjects","style","setProperty","slice","toLowerCase","removeEventListener","addEventListener","nullOrFalse","removeAttribute","setAttributeNS","XLINK_NS","setAttribute","createElement","vnode","lifecycle","document","createTextNode","createElementNS","SVG_NS","push","length","appendChild","removeChildren","removeElement","parent","done","nodeType","removeChild","cb","updateElement","oldProps","newProps","isRecycled","patchElement","oldVNode","newVNode","nodeValue","newElement","insertBefore","RECYCLED_NODE","savedNode","childNode","lastKey","lastChildren","nextKey","lastChildStart","lastChildEnd","nextChildren","nextChildStart","nextChildEnd","lastKeyed","nextKeyed","patch","container","querySelector","Array","isArray","FragmentError","el","pop","constructor","message","toString","tempBox","childNodes"],"mappings":"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"}